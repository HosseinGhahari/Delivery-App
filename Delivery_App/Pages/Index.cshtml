@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!--
    here we make a loop on our model which has the Deliveries 
    list and show the all the data on our table 
-->

<div class="text-center">
    <h1 class="display-4 m-5">لیست سفرها</h1>

    <table class="table table-responsive table-bordered table-striped" dir="rtl">
        <thead>
            <tr>
                <td>مقصد</td>
                <td>هزینه</td>
                <td>تاریخ</td>
                <td>وضعیت پرداخت</td>
                <td>عملیات ویرایش</td>
                <td>عملیات حذف</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Deliveries)
            {
                <tr>
                    <th>@item.Destination</th>
                    <th>@item.Price</th>
                    <th>@item.PersianDeliveryTime</th>
                    @if(@item.IsPaid == true)
                    {
                    <th class="alert-success">پرداخت شد</th>
                    }
                    else
                    {
                    <th class="alert-danger">پرداخت نشد</th>
                    }
                    <th><a asp-page="./Delivery/EditDelivery" asp-route-id="@item.Id">ویرایش</a></th>
                    <th><a class="link-danger" asp-page="./Index" asp-page-handler="RemoveAsync" asp-route-id="@item.Id">حذف</a></th>
                </tr>
            }
        </tbody>
    </table>

    <!--
           The 'paging' tag helper generates a pagination control. It uses model
           properties to determine the total records, page size, and current page.
     -->

    <paging dir="ltr" class="pagination mt-5" Total-records="@Model.TotalDeliveries" show-total-pages="false"
            show-total-records="false" page-size="@Model.PageSize" page-no="@Model.CurrentPage">
    </paging>

</div>